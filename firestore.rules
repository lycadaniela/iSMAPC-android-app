rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user is accessing their own document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Rules for parent users
    match /users/parents/{userId}/profile {
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow read: if isOwner(userId);
      allow update: if isOwner(userId);
    }

    // Rules for child collection
    match /users/child/{userId}/profile {
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow read: if isOwner(userId) || 
                 (isAuthenticated() && 
                  request.auth.token.email == resource.data.parentEmail);
      allow update: if isOwner(userId);
    }

    // Allow querying child profiles
    match /users/child/profile {
      allow read: if isAuthenticated() && 
                 request.auth.token.email == resource.data.parentEmail;
    }

    // Collection group rule for profile collections
    match /{path=**}/profile {
      allow read: if isAuthenticated() && 
                 (request.auth.token.email == resource.data.parentEmail ||
                  isOwner(resource.data.userId));
    }
  }
}
